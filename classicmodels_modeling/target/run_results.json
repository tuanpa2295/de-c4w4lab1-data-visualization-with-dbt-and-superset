{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.1", "generated_at": "2024-09-29T14:21:29.253075Z", "invocation_id": "97728b74-52d3-490d-81bf-323165feb988", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:28.625815Z", "completed_at": "2024-09-29T14:21:28.637696Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:28.638239Z", "completed_at": "2024-09-29T14:21:28.774724Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1510617733001709, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.annual_sells_per_office_view", "compiled": true, "compiled_code": "\n\nSELECT \n    DISTINCT fct.office_key\n    , dof.city \n    , dof.state \n    , dof.country\n    , dof.territory\n    , SUM(fct.quantity_ordered) AS total_quantity \n    , sum(fct.quantity_ordered*fct.product_price) as total_price\n    , EXTRACT(YEAR FROM fct.order_date) as year\nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_offices AS dof ON dof.office_key=fct.office_key\nGROUP BY fct.office_key\n    , dof.city\n    , dof.state\n    , dof.country\n    , dof.territory\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY fct.office_key ASC, year ASC", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"annual_sells_per_office_view\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:28.782024Z", "completed_at": "2024-09-29T14:21:28.789238Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:28.789862Z", "completed_at": "2024-09-29T14:21:28.850241Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07033967971801758, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.annual_sells_per_office_view-checkpoint", "compiled": true, "compiled_code": "\n\nSELECT \n    DISTINCT fct.office_key\n    , dof.city \n    , dof.state \n    , dof.country\n    , dof.territory\n    , SUM(fct.quantity_ordered) AS total_quantity \n    , sum(fct.quantity_ordered*fct.product_price) as total_price\n    , EXTRACT(YEAR FROM fct.order_date) as year\nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_offices AS dof ON dof.office_key=fct.office_key\nGROUP BY fct.office_key\n    , dof.city\n    , dof.state\n    , dof.country\n    , dof.territory\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY fct.office_key ASC, year ASC", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"annual_sells_per_office_view-checkpoint\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:28.856033Z", "completed_at": "2024-09-29T14:21:28.863311Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:28.863903Z", "completed_at": "2024-09-29T14:21:28.980566Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12652111053466797, "adapter_response": {"_message": "REFRESH MATERIALIZED VIEW", "code": "REFRESH MATERIALIZED VIEW", "rows_affected": -1}, "message": "REFRESH MATERIALIZED VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.avg_sells_per_product_line_mv", "compiled": true, "compiled_code": "\n\nSELECT \n    dp.product_line\n    , AVG(fct.quantity_ordered) AS avg_quantity \n    , AVG(fct.quantity_ordered*fct.product_price) AS avg_price\n    , EXTRACT(MONTH FROM fct.order_date) AS month\n    , EXTRACT(YEAR FROM fct.order_date) AS year \nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_products AS dp ON dp.product_key = fct.product_key\nGROUP BY dp.product_line\n    , EXTRACT(MONTH FROM fct.order_date)\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY\n    dp.product_line ASC    \n    , month ASC\n    , year ASC\nLIMIT 10", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"avg_sells_per_product_line_mv\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:28.986339Z", "completed_at": "2024-09-29T14:21:28.991669Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:28.992249Z", "completed_at": "2024-09-29T14:21:29.070094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08575963973999023, "adapter_response": {"_message": "REFRESH MATERIALIZED VIEW", "code": "REFRESH MATERIALIZED VIEW", "rows_affected": -1}, "message": "REFRESH MATERIALIZED VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.avg_sells_per_product_line_mv-checkpoint", "compiled": true, "compiled_code": "\n\nSELECT \n    dp.product_line\n    , AVG(fct.quantity_ordered) AS avg_quantity \n    , AVG(fct.quantity_ordered*fct.product_price) AS avg_price\n    , EXTRACT(MONTH FROM fct.order_date) AS month\n    , EXTRACT(YEAR FROM fct.order_date) AS year \nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_products AS dp ON dp.product_key = fct.product_key\nGROUP BY dp.product_line\n    , EXTRACT(MONTH FROM fct.order_date)\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY\n    dp.product_line ASC    \n    , month ASC\n    , year ASC\nLIMIT 10", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"avg_sells_per_product_line_mv-checkpoint\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:29.075750Z", "completed_at": "2024-09-29T14:21:29.080896Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:29.081413Z", "completed_at": "2024-09-29T14:21:29.145631Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07189607620239258, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.avg_sells_per_product_line_view", "compiled": true, "compiled_code": "\n\nSELECT \n    dp.product_line\n    , AVG(fct.quantity_ordered) AS avg_quantity \n    , AVG(fct.quantity_ordered*fct.product_price) AS avg_price\n    , EXTRACT(MONTH FROM fct.order_date) AS month\n    , EXTRACT(YEAR FROM fct.order_date) AS year \nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_products AS dp ON dp.product_key = fct.product_key\nGROUP BY dp.product_line\n    , EXTRACT(MONTH FROM fct.order_date)\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY\n    dp.product_line ASC    \n    , month ASC\n    , year ASC\nLIMIT 10", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"avg_sells_per_product_line_view\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T14:21:29.151312Z", "completed_at": "2024-09-29T14:21:29.156516Z"}, {"name": "execute", "started_at": "2024-09-29T14:21:29.157070Z", "completed_at": "2024-09-29T14:21:29.221191Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07191061973571777, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.classicmodels_modeling.avg_sells_per_product_line_view-checkpoint", "compiled": true, "compiled_code": "\n\nSELECT \n    dp.product_line\n    , AVG(fct.quantity_ordered) AS avg_quantity \n    , AVG(fct.quantity_ordered*fct.product_price) AS avg_price\n    , EXTRACT(MONTH FROM fct.order_date) AS month\n    , EXTRACT(YEAR FROM fct.order_date) AS year \nFROM classicmodels_star_schema.fact_orders AS fct\nJOIN classicmodels_star_schema.dim_products AS dp ON dp.product_key = fct.product_key\nGROUP BY dp.product_line\n    , EXTRACT(MONTH FROM fct.order_date)\n    , EXTRACT(YEAR FROM fct.order_date)\nORDER BY\n    dp.product_line ASC    \n    , month ASC\n    , year ASC\nLIMIT 10", "relation_name": "\"postgres\".\"classicmodels_star_schema\".\"avg_sells_per_product_line_view-checkpoint\""}], "elapsed_time": 0.8867948055267334, "args": {"use_colors": true, "macro_debugging": false, "defer": false, "which": "run", "printer_width": 80, "show_resource_report": false, "invocation_command": "dbt run -s analytical_views", "partial_parse": true, "introspect": true, "indirect_selection": "eager", "log_format": "default", "log_level": "info", "empty": false, "log_level_file": "debug", "select": ["analytical_views"], "project_dir": "/config/workspace/classicmodels_modeling", "log_file_max_bytes": 10485760, "quiet": false, "profiles_dir": "/config/.dbt", "write_json": true, "log_path": "/config/workspace/classicmodels_modeling/logs", "vars": {}, "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "static_parser": true, "strict_mode": false, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "favor_state": false, "log_format_file": "debug", "partial_parse_file_diff": true, "populate_cache": true, "print": true, "source_freshness_run_project_hooks": false, "require_explicit_package_overrides_for_builtin_materializations": true, "cache_selected_only": false, "version_check": true, "require_resource_names_without_spaces": false}}